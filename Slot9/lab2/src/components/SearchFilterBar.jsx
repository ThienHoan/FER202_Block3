import { Form, InputGroup, Row, Col } from 'react-bootstrap'; // Form v√† layout Bootstrap
import PropTypes from 'prop-types'; // Ki·ªÉm tra ki·ªÉu props
import { allGenres } from '../movie.js'; // Danh s√°ch th·ªÉ lo·∫°i ƒë·ªÉ render select

const SearchFilterBar = ({ 
  searchTerm, 
  setSearchTerm, 
  selectedGenre, 
  setSelectedGenre, 
  sortBy, 
  setSortBy 
}) => { // Thanh c√¥ng c·ª• t√¨m ki·∫øm/l·ªçc/s·∫Øp x·∫øp
  return (
    <Row className="mb-4"> {/* H√†ng ch·ª©a 3 c·ªôt */}
      <Col md={4}> {/* √î nh·∫≠p t·ª´ kh√≥a */}
        <InputGroup>
          <InputGroup.Text>
            üîç
          </InputGroup.Text>
          <Form.Control
            type="text"
            placeholder="Search movies by title..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)} // C·∫≠p nh·∫≠t t·ª´ kh√≥a
          />
        </InputGroup>
      </Col>
      
      <Col md={4}> {/* Ch·ªçn th·ªÉ lo·∫°i */}
        <Form.Select 
          value={selectedGenre} 
          onChange={(e) => setSelectedGenre(e.target.value)}
        >
          {allGenres.map(genre => (
            <option key={genre} value={genre}>
              {genre === 'All' ? 'All Genres' : genre}
            </option>
          ))}
        </Form.Select>
      </Col>
      
      <Col md={4}> {/* Ch·ªçn c√°ch s·∫Øp x·∫øp theo th·ªùi l∆∞·ª£ng */}
        <Form.Select 
          value={sortBy} 
          onChange={(e) => setSortBy(e.target.value)}
        >
          <option value="none">Sort by Duration</option>
          <option value="duration-asc">Duration ‚Üë (Shortest first)</option>
          <option value="duration-desc">Duration ‚Üì (Longest first)</option>
        </Form.Select>
      </Col>
    </Row>
  );
};

SearchFilterBar.propTypes = { // Ki·ªÉu props cho thanh c√¥ng c·ª•
  searchTerm: PropTypes.string.isRequired, // Gi√° tr·ªã t·ª´ kh√≥a hi·ªán t·∫°i
  setSearchTerm: PropTypes.func.isRequired, // H√†m c·∫≠p nh·∫≠t t·ª´ kh√≥a
  selectedGenre: PropTypes.string.isRequired, // Th·ªÉ lo·∫°i ƒëang ch·ªçn
  setSelectedGenre: PropTypes.func.isRequired, // H√†m c·∫≠p nh·∫≠t th·ªÉ lo·∫°i
  sortBy: PropTypes.string.isRequired, // C√°ch s·∫Øp x·∫øp hi·ªán t·∫°i
  setSortBy: PropTypes.func.isRequired // H√†m c·∫≠p nh·∫≠t s·∫Øp x·∫øp
};

export default SearchFilterBar; // Xu·∫•t m·∫∑c ƒë·ªãnh thanh t√¨m ki·∫øm/l·ªçc/s·∫Øp x·∫øp
